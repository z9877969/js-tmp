"use strict";

/* 
    Деструктуризація об'єктів.
*/

// const user = {
//   name: "Bob",
//   email: "bob@mail.com",
//   age: 25,
// };

/* 
    Напишіть деструктуризуюче присвоєння, яке:
    - властивість name присвоїть в змінну name
    - властивість age присвоїть в змінну userAge
    - властивість isActive присвоїть в змінну isActive(якщо нема такої властовості, то false)
*/

/* 
    Глибока деструктуризація об'єктів.
*/

// const team = {
//   namber: 4,
//   flag: "./images/flag.jpg",
//   employes: ["Mark", "Steve", "Bogdan", "Viktor"],
//   langs: {
//     original: "uk",
//     secondary: "en",
//   },
// };

/* 
    Деструктуризація масивів.
*/
// const names = ["Rock", "Bart", "Rosie", "Jack"];

/* 
    У нас є об'єкт salaries з зарплатами:
    - створіть ф-ю topSalary(salaries), яка повертає ім'я самого високоопачуваого працівника.
    - якщо об'єкт salaries пустий, то потрібно повернути null.
    - якщо декілька високооплачуваних працівників, то потрібно повернути будь-кого з них
    P.S. використовуйте Object.entries та деструктуризацію, щоб перебрати пари ключ значення.
*/

// const salaries = {
//     Jack: 250,
//     Bill: 300,
//     Bob: 100
// }